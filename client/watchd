#!/usr/bin/env python3

import os
import random
import subprocess
import sys
import tempfile
import threading
import time
import shutil
import subprocess
from sys import platform

import git
import requests
from flask import Flask, jsonify, request, send_from_directory
from flask_cors import CORS
from git import Repo


BASE_DIR = os.path.join(tempfile.gettempdir(), 'watchd')
print('BASE_DIR', BASE_DIR)
os.makedirs(BASE_DIR, exist_ok=True)
REPO_DIR = None


app = Flask(__name__, static_folder=BASE_DIR)
cors = CORS(app, resources={'/*': {'origins': '*'}})


SERVER_HOST = '127.0.0.1'
SERVER_PORT = 1337

CLIENT_HOST = '127.0.0.1'
CLIENT_PORT = 1338


def main(argv):
    assert len(argv) == 2
    global REPO_DIR

    url = argv[1]
    REPO_DIR = os.path.join(BASE_DIR, url.split('/')[-1])

    shutil.rmtree(REPO_DIR, ignore_errors=True)
    repo = Repo.clone_from(url, REPO_DIR, branch='master')

    link = f'http://{SERVER_HOST}:{SERVER_PORT}/stream/{os.path.basename(os.path.normpath(REPO_DIR))}'
    print(f'Opening {link}...')

    if platform == "linux" or platform == "linux2":
        subprocess.run(["xdg-open", link])
    elif platform == "darwin":
        subprocess.run(["open", link])
        pass

    while True:
        repo.git.pull('origin', 'master')
        time.sleep(0.1)


@app.route('/', methods=['GET'])
def index():
    assert REPO_DIR is not None

    repo = Repo(REPO_DIR)

    files = repo.git.ls_files().split()

    return jsonify(files=files)


if __name__ == '__main__':
    m = threading.Thread(target=main, args=(sys.argv,))
    m.start()

    try:
        app.run(host=CLIENT_HOST, port=CLIENT_PORT, debug=False)
    except OSError:
        pass
    except KeyboardInterrupt:
        exit(0)

    try:
        m.join()
    except KeyboardInterrupt:
        exit(0)
